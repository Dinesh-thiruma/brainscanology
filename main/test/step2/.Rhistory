}
for (item in container){
eval(parse(text=item))
}
########
# The following renames the first item in objects called rowStuffN (N=integer)
basket = list()
for (item in numRows){
cup = paste0("rowStuff",item,"[1] = paste('duplic of', rowStuff",item,"[1])")
basket = append(basket, cup)
}
for (item in basket){
eval(parse(text=item))
}
#######
# The following rowbinds each object called rowstuffN (N=integers)
#   to the original data frame called df. Names the new data frame df.final
df.final = df
net = list()
for (item in numRows){
bowl = paste0("df.final = rbind(df.final,rowStuff",item,")")
net = append(net, bowl)
}
for (item in net){
eval(parse(text=item))
}
#View(df.final)
######
# Check to see if the number of rows in df.final make sense.
# Create a new csv file out of df.final
correct_length = dim(df)[1] + dim(greaterThan7)[1]
correct_length
if (dim(df.final)[1] == correct_length){
print("Congratulations! 'df.final' has the correct number of rows.")
write.csv(df.final, paste0(stripped.name, "_preProc.csv"), row.names = F)
} else {
print(rep("ERROR", times = 200))
}
}
library(diffr)
# This gets the file path to the folder containing all the files to be analyzed by this script
path = getwd()
# This creates a vector of all files in the folder
contents = list.files(path)
contents
for (i in contents) {
df = read.csv(i)
# This modifies the name of the loaded file for the purposes of naming the
#   image that is saved at the end of this script
filename = basename(i)
stripped.name = stringr::str_remove(filename, ".jpeg")
df = arrange(df, length)
##########
# Extract rows in which Feret is >=7
greaterThan7 = filter(df, length>=7)
View(greaterThan7)
if(dim(greaterThan7)[1] == 0){
write.csv(df.final, paste0(stripped.name, "_preProc.csv"), row.names = F)
break
}
numRows = seq(1:dim(greaterThan7)[1])
#############
container = list()
for (item in numRows) {
thing = paste0("rowStuff", item," = greaterThan7[",item, ",]")
container = append(container, thing)
}
for (item in container){
eval(parse(text=item))
}
########
# The following renames the first item in objects called rowStuffN (N=integer)
basket = list()
for (item in numRows){
cup = paste0("rowStuff",item,"[1] = paste('duplic of', rowStuff",item,"[1])")
basket = append(basket, cup)
}
for (item in basket){
eval(parse(text=item))
}
#######
# The following rowbinds each object called rowstuffN (N=integers)
#   to the original data frame called df. Names the new data frame df.final
df.final = df
net = list()
for (item in numRows){
bowl = paste0("df.final = rbind(df.final,rowStuff",item,")")
net = append(net, bowl)
}
for (item in net){
eval(parse(text=item))
}
#View(df.final)
######
# Check to see if the number of rows in df.final make sense.
# Create a new csv file out of df.final
correct_length = dim(df)[1] + dim(greaterThan7)[1]
correct_length
if (dim(df.final)[1] == correct_length){
print("Congratulations! 'df.final' has the correct number of rows.")
write.csv(df.final, paste0(stripped.name, "_preProc.csv"), row.names = F)
} else {
print(rep("ERROR", times = 200))
}
}
library(diffr)
# This gets the file path to the folder containing all the files to be analyzed by this script
path = getwd()
# This creates a vector of all files in the folder
contents = list.files(path)
contents
for (i in contents) {
df = read.csv(i)
# This modifies the name of the loaded file for the purposes of naming the
#   image that is saved at the end of this script
filename = basename(i)
stripped.name = stringr::str_remove(filename, ".jpeg")
df = arrange(df, length)
##########
# Extract rows in which Feret is >=7
greaterThan7 = filter(df, length>=7)
View(greaterThan7)
if(dim(greaterThan7)[1] == 0){
print("Duplicating file")
write.csv(df, paste0(stripped.name, "_preProc.csv"), row.names = F)
break
}
numRows = seq(1:dim(greaterThan7)[1])
#############
container = list()
for (item in numRows) {
thing = paste0("rowStuff", item," = greaterThan7[",item, ",]")
container = append(container, thing)
}
for (item in container){
eval(parse(text=item))
}
########
# The following renames the first item in objects called rowStuffN (N=integer)
basket = list()
for (item in numRows){
cup = paste0("rowStuff",item,"[1] = paste('duplic of', rowStuff",item,"[1])")
basket = append(basket, cup)
}
for (item in basket){
eval(parse(text=item))
}
#######
# The following rowbinds each object called rowstuffN (N=integers)
#   to the original data frame called df. Names the new data frame df.final
df.final = df
net = list()
for (item in numRows){
bowl = paste0("df.final = rbind(df.final,rowStuff",item,")")
net = append(net, bowl)
}
for (item in net){
eval(parse(text=item))
}
#View(df.final)
######
# Check to see if the number of rows in df.final make sense.
# Create a new csv file out of df.final
correct_length = dim(df)[1] + dim(greaterThan7)[1]
correct_length
if (dim(df.final)[1] == correct_length){
print("Congratulations! 'df.final' has the correct number of rows.")
write.csv(df.final, paste0(stripped.name, "_preProc.csv"), row.names = F)
} else {
print(rep("ERROR", times = 200))
}
}
library(diffr)
# This gets the file path to the folder containing all the files to be analyzed by this script
path = getwd()
# This creates a vector of all files in the folder
contents = list.files(path)
contents
for (i in contents) {
df = read.csv(i)
# This modifies the name of the loaded file for the purposes of naming the
#   image that is saved at the end of this script
filename = basename(i)
stripped.name = stringr::str_remove(filename, ".jpeg")
df_copy = df
df = arrange(df, length)
##########
# Extract rows in which Feret is >=7
greaterThan7 = filter(df, length>=7)
View(greaterThan7)
if(dim(greaterThan7)[1] == 0){
print("Duplicating file")
write.csv(df_copy, paste0(stripped.name, "_preProc.csv"), row.names = F)
break
}
numRows = seq(1:dim(greaterThan7)[1])
#############
container = list()
for (item in numRows) {
thing = paste0("rowStuff", item," = greaterThan7[",item, ",]")
container = append(container, thing)
}
for (item in container){
eval(parse(text=item))
}
########
# The following renames the first item in objects called rowStuffN (N=integer)
basket = list()
for (item in numRows){
cup = paste0("rowStuff",item,"[1] = paste('duplic of', rowStuff",item,"[1])")
basket = append(basket, cup)
}
for (item in basket){
eval(parse(text=item))
}
#######
# The following rowbinds each object called rowstuffN (N=integers)
#   to the original data frame called df. Names the new data frame df.final
df.final = df
net = list()
for (item in numRows){
bowl = paste0("df.final = rbind(df.final,rowStuff",item,")")
net = append(net, bowl)
}
for (item in net){
eval(parse(text=item))
}
#View(df.final)
######
# Check to see if the number of rows in df.final make sense.
# Create a new csv file out of df.final
correct_length = dim(df)[1] + dim(greaterThan7)[1]
correct_length
if (dim(df.final)[1] == correct_length){
print("Congratulations! 'df.final' has the correct number of rows.")
write.csv(df.final, paste0(stripped.name, "_preProc.csv"), row.names = F)
} else {
print(rep("ERROR", times = 200))
}
}
library(diffr)
# This gets the file path to the folder containing all the files to be analyzed by this script
path = getwd()
# This creates a vector of all files in the folder
contents = list.files(path)
contents
for (i in contents) {
df = read.csv(i)
# This modifies the name of the loaded file for the purposes of naming the
#   image that is saved at the end of this script
filename = basename(i)
stripped.name = stringr::str_remove(filename, ".jpeg")
df_copy = df
df = arrange(df, length)
##########
# Extract rows in which Feret is >=7
greaterThan7 = filter(df, length>=7)
View(greaterThan7)
if(dim(greaterThan7)[1] == 0){
print("Duplicating file")
write.csv(df_copy, paste0(stripped.name, "_preProc.csv"), row.names = F)
break
}
numRows = seq(1:dim(greaterThan7)[1])
#############
container = list()
for (item in numRows) {
thing = paste0("rowStuff", item," = greaterThan7[",item, ",]")
container = append(container, thing)
}
for (item in container){
eval(parse(text=item))
}
########
# The following renames the first item in objects called rowStuffN (N=integer)
basket = list()
for (item in numRows){
cup = paste0("rowStuff",item,"[1] = paste('duplic of', rowStuff",item,"[1])")
basket = append(basket, cup)
}
for (item in basket){
eval(parse(text=item))
}
#######
# The following rowbinds each object called rowstuffN (N=integers)
#   to the original data frame called df. Names the new data frame df.final
df.final = df
net = list()
for (item in numRows){
bowl = paste0("df.final = rbind(df.final,rowStuff",item,")")
net = append(net, bowl)
}
for (item in net){
eval(parse(text=item))
}
#View(df.final)
######
# Check to see if the number of rows in df.final make sense.
# Create a new csv file out of df.final
correct_length = dim(df)[1] + dim(greaterThan7)[1]
correct_length
if (dim(df.final)[1] == correct_length){
print("Congratulations! 'df.final' has the correct number of rows.")
write.csv(df.final, paste0(stripped.name, "_preProc.csv"), row.names = F)
} else {
print(rep("ERROR", times = 200))
}
}
library(diffr)
# This gets the file path to the folder containing all the files to be analyzed by this script
path = getwd()
# This creates a vector of all files in the folder
contents = list.files(path)
contents
for (i in contents) {
df = read.csv(i)
# This modifies the name of the loaded file for the purposes of naming the
#   image that is saved at the end of this script
filename = basename(i)
stripped.name = stringr::str_remove(filename, ".jpeg")
df_copy = df
df = arrange(df, length)
##########
# Extract rows in which Feret is >=7
greaterThan7 = filter(df, length>=7)
View(greaterThan7)
if(dim(greaterThan7)[1] == 0){
print("Duplicating file")
write.csv(df_copy, paste0(stripped.name, "_preProc.csv"), row.names = F)
}else{
numRows = seq(1:dim(greaterThan7)[1])
#############
container = list()
for (item in numRows) {
thing = paste0("rowStuff", item," = greaterThan7[",item, ",]")
container = append(container, thing)
}
for (item in container){
eval(parse(text=item))
}
########
# The following renames the first item in objects called rowStuffN (N=integer)
basket = list()
for (item in numRows){
cup = paste0("rowStuff",item,"[1] = paste('duplic of', rowStuff",item,"[1])")
basket = append(basket, cup)
}
for (item in basket){
eval(parse(text=item))
}
#######
# The following rowbinds each object called rowstuffN (N=integers)
#   to the original data frame called df. Names the new data frame df.final
df.final = df
net = list()
for (item in numRows){
bowl = paste0("df.final = rbind(df.final,rowStuff",item,")")
net = append(net, bowl)
}
for (item in net){
eval(parse(text=item))
}
#View(df.final)
######
# Check to see if the number of rows in df.final make sense.
# Create a new csv file out of df.final
correct_length = dim(df)[1] + dim(greaterThan7)[1]
correct_length
if (dim(df.final)[1] == correct_length){
print("Congratulations! 'df.final' has the correct number of rows.")
write.csv(df.final, paste0(stripped.name, "_preProc.csv"), row.names = F)
} else {
print(rep("ERROR", times = 200))
}
}
}
library(diffr)
# This gets the file path to the folder containing all the files to be analyzed by this script
path = getwd()
# This creates a vector of all files in the folder
contents = list.files(path)
contents
for (i in contents) {
df = read.csv(i)
# This modifies the name of the loaded file for the purposes of naming the
#   image that is saved at the end of this script
filename = basename(i)
stripped.name = stringr::str_remove(filename, ".jpeg")
df_copy = df
df = arrange(df, length)
##########
# Extract rows in which Feret is >=7
greaterThan7 = filter(df, length>=7)
View(greaterThan7)
if(dim(greaterThan7)[1] == 0){
print("Duplicating file")
write.csv(df_copy, paste0(stripped.name, "_preProc.csv"), row.names = F)
}else{
numRows = seq(1:dim(greaterThan7)[1])
#############
container = list()
for (item in numRows) {
thing = paste0("rowStuff", item," = greaterThan7[",item, ",]")
container = append(container, thing)
}
for (item in container){
eval(parse(text=item))
}
########
# The following renames the first item in objects called rowStuffN (N=integer)
basket = list()
for (item in numRows){
cup = paste0("rowStuff",item,"[1] = paste('duplic of', rowStuff",item,"[1])")
basket = append(basket, cup)
}
for (item in basket){
eval(parse(text=item))
}
#######
# The following rowbinds each object called rowstuffN (N=integers)
#   to the original data frame called df. Names the new data frame df.final
df.final = df
net = list()
for (item in numRows){
bowl = paste0("df.final = rbind(df.final,rowStuff",item,")")
net = append(net, bowl)
}
for (item in net){
eval(parse(text=item))
}
#View(df.final)
######
# Check to see if the number of rows in df.final make sense.
# Create a new csv file out of df.final
correct_length = dim(df)[1] + dim(greaterThan7)[1]
correct_length
if (dim(df.final)[1] == correct_length){
print("Congratulations! 'df.final' has the correct number of rows.")
write.csv(df.final, paste0(stripped.name, "_preProc.csv"), row.names = F)
} else {
print(rep("ERROR", times = 200))
}
}
}
library(diffr)
# This gets the file path to the folder containing all the files to be analyzed by this script
path = getwd()
# This creates a vector of all files in the folder
contents = list.files(path)
contents
for (i in contents) {
df = read.csv(i)
# This modifies the name of the loaded file for the purposes of naming the
#   image that is saved at the end of this script
filename = basename(i)
stripped.name = stringr::str_remove(filename, ".jpeg")
df_copy = df
df = arrange(df, length)
##########
# Extract rows in which Feret is >=7
greaterThan7 = filter(df, length>=7)
#View(greaterThan7)
if(dim(greaterThan7)[1] == 0){
print("File had no objects greater than 7, so duplicated. This is not an error.")
write.csv(df_copy, paste0(stripped.name, "_preProc.csv"), row.names = F)
}else{
numRows = seq(1:dim(greaterThan7)[1])
#############
container = list()
for (item in numRows) {
thing = paste0("rowStuff", item," = greaterThan7[",item, ",]")
container = append(container, thing)
}
for (item in container){
eval(parse(text=item))
}
########
# The following renames the first item in objects called rowStuffN (N=integer)
basket = list()
for (item in numRows){
cup = paste0("rowStuff",item,"[1] = paste('duplic of', rowStuff",item,"[1])")
basket = append(basket, cup)
}
for (item in basket){
eval(parse(text=item))
}
#######
# The following rowbinds each object called rowstuffN (N=integers)
#   to the original data frame called df. Names the new data frame df.final
df.final = df
net = list()
for (item in numRows){
bowl = paste0("df.final = rbind(df.final,rowStuff",item,")")
net = append(net, bowl)
}
for (item in net){
eval(parse(text=item))
}
#View(df.final)
######
# Check to see if the number of rows in df.final make sense.
# Create a new csv file out of df.final
correct_length = dim(df)[1] + dim(greaterThan7)[1]
correct_length
if (dim(df.final)[1] == correct_length){
print("Congratulations! 'df.final' has the correct number of rows.")
write.csv(df.final, paste0(stripped.name, "_preProc.csv"), row.names = F)
} else {
print(rep("ERROR", times = 200))
}
}
}
